# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
name: Python application
on:
    push:
        branches: [ master ]
#   pull_request:
#     branches: [ master ]
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: [ 3.9 ]

        steps:
            -   uses: actions/checkout@v2
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Set up Node.js 10
                uses: actions/setup-node@v1
            -   name: Install dependencies
                run: |
                    python -m pip install --upgrade pip
                    python -m pip install flake8 pytest
                    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            
            - name: create firebase files
              run: |
                  echo $FIREBASE_ENV_FILE >> ./firebase-config.json
                  cat ./firebase-config.json
                  echo $FIREBASE_ADMIN_ENV_FILE >> ./service-account-file.json
                  cat ./service-account-file.json
              shell: bash
              env:
                FIREBASE_ENV_FILE : ${{secrets.FIREBASE_CERT}}
                FIREBASE_ADMIN_ENV_FILE : ${{secrets.FIREBASE_ADMIN_CERT}}
            - name: Make envfile
              uses: SpicyPizza/create-envfile@v1
              with:
                SECRET_KEY: "123456abcdef"
                DATABASE_URL: "postgresql://localhost:5432/postgres"
                REDIS_HOST: "localhost"
                REDIS_PORT: 6379
                REDIS_DB: 0
                REDIS_PASSWORD: ""
                CACHE_KEY_PREFIX: "db_cache"
                FIREBASE_APIKEY: ${{ secrets.FIREBASE_API }}
                FIREBASE_SERVICE_CONFIG_FILE: './service-account-file.json'
                FIREBASE_CONFIG_FILE: './firebase-config.json'
                file_name: .env.testing
            - name: Run integration tests against emulator
              env:
                FLASK_ENV: 'testing'
                FIREBASE_AUTH_EMULATOR_HOST: 'localhost:9099'
                FIRESTORE_EMULATOR_HOST: 'localhost:8080'
                FIRESTORE_STORAGE_EMULATOR_HOST: 'localhost:9199'
              run: |
                npm install -g firebase-tools
                firebase emulators:exec --only auth,firestore --project fake-project-id 'python -m unittest'

#    lint:
#        runs-on: ubuntu-latest
#        steps:
#            -   uses: actions/checkout@v1
#            -   name: Set up Python 3.9
#                uses: actions/setup-python@v1
#                with:
#                    python-version: 3.9
#            -   name: Install dependencies
#                run: |
#                    python -m pip install --upgrade pip
#                    pip install -r requirements.txt
#            -   name: Lint with pylint
#                run: ./lint.sh all
