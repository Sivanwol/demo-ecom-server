"""add settings table

Revision ID: 9fa2c036d3ac
Revises: 29be447fbfe5
Create Date: 2021-06-20 17:47:49.329073

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9fa2c036d3ac'
down_revision = '29be447fbfe5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('settings',
                    sa.Column('key', sa.String(length=255), index=True, nullable=False, unique=True),
                    sa.Column('environment', sa.String(length=50), index=True, nullable=False, unique=True),
                    sa.Column('description', sa.Text(), nullable=False, default=4),
                    sa.Column('is_json', sa.Boolean(), default=False),
                    sa.Column('value', sa.Text(), nullable=True),
                    sa.Column('valueJSON', sa.JSON(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), default=sa.func.current_timestamp()),
                    sa.Column('updated_at', sa.DateTime(), onupdate=sa.ColumnDefault(sa.func.current_timestamp), default=sa.func.current_timestamp()),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('from_store_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('users_from_store_id_fkey', 'users', 'stores', ['from_store_id'], ['id'])
    op.create_index('ix_users_uid', 'users', ['uid'], unique=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.create_foreign_key('user_roles_user_id_fkey', 'user_roles', 'users', ['user_id'], ['id'])
    op.create_foreign_key('user_roles_role_id_fkey', 'user_roles', 'roles', ['role_id'], ['id'])
    op.create_index('ix_stores_locations_lng', 'stores_locations', ['lng'], unique=False)
    op.create_index('ix_stores_locations_lat', 'stores_locations', ['lat'], unique=False)
    op.alter_column('stores_locations', 'country_code',
               existing_type=sa.VARCHAR(length=3),
               nullable=True)
    op.create_index('ix_stores_hours_day', 'stores_hours', ['day'], unique=False)
    op.create_index('ix_stores_store_code', 'stores', ['store_code'], unique=True)
    op.alter_column('stores', 'store_code',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('stores', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index('ix_roles_name', 'roles', ['name'], unique=True)
    op.alter_column('roles', 'is_global',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('roles', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.create_table('media_files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('code', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('owner_entity_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('folder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('file_location', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_size', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_ext', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_published', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_system_file', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], ['media_folders.id'], name='media_files_folder_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='media_files_pkey')
    )
    op.create_index('ix_media_files_owner_entity_id', 'media_files', ['owner_entity_id'], unique=False)
    op.create_index('ix_media_files_folder_id', 'media_files', ['folder_id'], unique=False)
    op.create_index('ix_media_files_code', 'media_files', ['code'], unique=True)
    op.create_table('media_folders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('code', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('parent_folder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alias', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('color', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('is_system_folder', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_folder_id'], ['media_folders.id'], name='media_folders_parent_folder_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='media_folders_pkey')
    )
    op.create_index('ix_media_folders_code', 'media_folders', ['code'], unique=True)
    op.create_index('ix_media_folders_alias', 'media_folders', ['alias'], unique=False)
    # ### end Alembic commands ###
